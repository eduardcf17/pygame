#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
# Módulos
import sys, pygame
from pygame.locals import *
 
# Constantes
WIDTH = 1270
HEIGHT = 720

# --------------------------------------------------------------------- 
# Clases
# ---------------------------------------------------------------------
class elemento(pygame.sprite.Sprite):
	def __init__(self,imagen,transp,posx,posy,velx,vely):
		pygame.sprite.Sprite.__init__(self)
		self.image = load_image(imagen, transp)
		self.rect = self.image.get_rect()
		self.rect.centerx = posx
		self.rect.centery = posy
		self.speed = [velx, vely]

# ---------------------------------------------------------------------
# Funciones generales
# ---------------------------------------------------------------------
def load_image(filename, transparent=False):
        try: image = pygame.image.load(filename)
        except pygame.error, message:
                raise SystemExit, message
        image = image.convert()
        if transparent:
                color = image.get_at((0,0))
                image.set_colorkey(color, RLEACCEL)
        return image
        
def texto(texto, fuente, posx, posy, color):
	salida = pygame.font.Font.render(fuente, texto, 1, color)
	salida_rect = salida.get_rect()
	salida_rect.centerx = posx
	salida_rect.centery = posy
	return salida, salida_rect

# ---------------------------------------------------------------------
# Funciones del juego
# ---------------------------------------------------------------------
def ProcesarMovimiento(time,keys,jugador):
	if jugador.rect.left >= 0:
		if keys[K_UP]:
			jugador.rect.centerx -= jugador.speed[1] * time
	if jugador.rect.right <= HEIGHT:
		if keys[K_DOWN]:
			jugador.rect.centerx += jugador.speed[1] * time



def ActualizarPantalla(time,bola,jugador):
# Actualizamos la bola
	bola.rect.centerx += bola.speed[0] * time
	bola.rect.centery += bola.speed[1] * time
# Control de la puntuación
	

# Miramos las colisiones
	

# ---------------------------------------------------------------------
# Programa Principal
# --------------------------------------------------------------------- 
def main():
# Inicializaciones pygame
	screen = pygame.display.set_mode((WIDTH, HEIGHT))
	pygame.display.set_caption("Ejemplo Pygame")
	background_image = load_image('imagenes/fondo.jpg')
	
# Inicializaciones elementos de juego
	bola = elemento('imagenes/bola.png',True,WIDTH/2,HEIGHT/2,0.5,-0.5)
	jugador= elemento("imagenes/button-48536_960_720.png",True,WIDTH/75,HEIGHT/75,-8,-10)
	
	

	clock = pygame.time.Clock()

	while True:
		time = clock.tick(60)
		for eventos in pygame.event.get():
			if eventos.type == QUIT:
				sys.exit(0)
				
# Procesamos jugador
		keys = pygame.key.get_pressed()
		ProcesarMovimiento(time,keys,jugador)
		
# Procesamos ia
		
		
# Actualizamos estado de la partida
		ActualizarPantalla(time,bola,jugador)
	
		
# Renderizamos
		screen.blit(background_image, (0, 0))
		screen.blit(jugador.image,jugador.rect)
		screen.blit(bola.image,bola.rect)
		
		
		pygame.display.flip()
	return 0
 
if __name__ == '__main__':
	pygame.init()
	main()
